# default.custom.yaml
patch:
  switcher:
    caption: "「切换方案」"
    hotkeys:
      - "Shift+space"
      - F4
    save_options:
      - ascii_punct
      - traditionalization
      - emoji
      - full_shape
      - search_single_char
      - kaomoji
    fold_options: true # 呼出时是否折叠，多方案时建议折叠 true ，一个方案建议展开 false
    abbreviate_options: true # 折叠时是否缩写选项
    option_list_separator: " / " # 折叠时的选项分隔符
  schema_list:
    - schema: combo_pinyin_split
    - schema: combo_pinyin_engrammer
    - schema: easy_en
    - schema: snow_pinyin
    - schema: snow_jiandao
    - schema: japanese
    #- schema: radical_pinyin
  menu:
    page_size: 6
  ascii_composer:
    good_old_caps_lock: true
    switch_key:
      Shift_L: commit_text # 已输入的候选文字上屏并切换至英文输入模式
      Shift_R: inline_ascii # 在输入法的临时英文编辑区内输入字母、数字、符号、空格等，回车上屏后自动复位到中文
      Control_L: noop
      Control_R: noop
      Caps_Lock: noop
      Eisu_toggle: clear
  key_binder/bindings:
    # Tab / Shift+Tab 切换光标至下 /上一个拼音
    - { when: composing, accept: Shift+Tab, send: Shift+Left }
    - { when: composing, accept: Tab, send: Shift+Right }
    - { when: composing, accept: Alt+p, send: Page_Up }
    - { when: composing, accept: Alt+n, send: Page_Down }
    - { when: composing, accept: Alt+b, send: Left }
    - { when: composing, accept: Alt+f, send: Right }
    - { when: composing, accept: F5, select: combo_pinyin }
    - { when: composing, accept: F6, select: combo_pinyin_engrammer }
    - { when: composing, accept: F7, select: easy_en }
  #key_binder:
  #  bindings:,
  #    - { when: composing, accept: Control+p, send: Up }
  #    - { when: composing, accept: Control+n, send: Down }
  #    - { when: composing, accept: Control+b, send: Left }
  #    - { when: composing, accept: Control+f, send: Right }
  #    - { when: composing, accept: Control+a, send: Home }
  #    - { when: composing, accept: Control+e, send: End }
  #    - { when: composing, accept: Control+d, send: Delete }
  #    - { when: composing, accept: Control+k, send: Shift+Delete }
  #    - { when: composing, accept: Control+h, send: BackSpace }
  #    - { when: composing, accept: Control+g, send: Escape }
  #    - { when: composing, accept: Control+bracketleft, send: Escape }
  #    - { when: composing, accept: Control+y, send: Page_Up }
  #    - { when: composing, accept: Alt+v, send: Page_Up }
  #    - { when: composing, accept: Control+v, send: Page_Down }
  #    - { when: composing, accept: ISO_Left_Tab, send: Shift+Left }
  #    - { when: composing, accept: Shift+Tab, send: Shift+Left }
  #    - { when: composing, accept: Tab, send: Shift+Right }
  #    # - { when: always, accept: Control+Shift+1, select: xkjd6 }
  #    # - { when: always, accept: Control+Shift+2, select: easy_en }
  #    # - { when: always, accept: Control+Shift+3, select: liangfen }
